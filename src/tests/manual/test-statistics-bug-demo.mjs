/**
 * Demonstration: Statistik-Z√§hlung Bug Fix
 * 
 * Dieses Script demonstriert das Problem, das der User erlebt hat:
 * Die Summe von √ºbersetzten + √ºbersprungenen + fehlerhaften Radikalen
 * stimmte nicht mit der Gesamtzahl √ºberein.
 */

console.log("üêõ STATISTICS COUNTING BUG DEMONSTRATION");
console.log("=".repeat(60));

// Simuliere das User-Szenario: Alle Radikale √ºbersetzen lassen
const userScenario = [
    { id: 1, meaning: "Ground", status: 'uploaded', message: "Neu √ºbersetzt: Boden" },
    { id: 2, meaning: "Tree", status: 'success', message: "Bereits korrekt: Baum" },
    { id: 3, meaning: "Fire", status: 'uploaded', message: "Neu √ºbersetzt: Feuer" },
    { id: 4, meaning: "Water", status: 'success', message: "Bereits korrekt: Wasser" },
    { id: 5, meaning: "Mountain", status: 'success', message: "Bereits korrekt: Berg" },
    { id: 6, meaning: "Person", status: 'uploaded', message: "Neu √ºbersetzt: Person" },
    { id: 7, meaning: "Road", status: 'success', message: "Bereits korrekt: Weg" },
    { id: 8, meaning: "Sun", status: 'uploaded', message: "Neu √ºbersetzt: Sonne" },
];

console.log(`üìä User Scenario: ${userScenario.length} Radikale √ºbersetzt`);
console.log("");

// === ALTE (BUGGY) LOGIK ===
console.log("‚ùå ALTE LOGIK (BUGGY):");
console.log("-".repeat(30));

const oldSuccessCount = userScenario.filter(r => r.status === 'uploaded').length;
const oldSkippedCount = userScenario.filter(r => r.status === 'skipped').length;
const oldErrorCount = userScenario.filter(r => r.status === 'error').length;
const oldTotal = oldSuccessCount + oldSkippedCount + oldErrorCount;

console.log(`‚úÖ Erfolgreich √ºbersetzt: ${oldSuccessCount}`);
console.log(`‚è≠Ô∏è  √úbersprungen: ${oldSkippedCount}`);
console.log(`‚ùå Fehlerhaft: ${oldErrorCount}`);
console.log(`üìä SUMME: ${oldTotal}/${userScenario.length}`);
console.log("");

if (oldTotal !== userScenario.length) {
    console.log(`üö® PROBLEM: ${userScenario.length - oldTotal} Radikale fehlen in der Statistik!`);
    console.log(`   Das sind die 'success' Status, die nicht gez√§hlt wurden.`);
} else {
    console.log("‚úÖ Zahlen stimmen √ºberein (unwahrscheinlich bei diesem Bug)");
}

console.log("");

// === NEUE (KORRIGIERTE) LOGIK ===
console.log("‚úÖ NEUE LOGIK (KORRIGIERT):");
console.log("-".repeat(30));

const newUploadedCount = userScenario.filter(r => r.status === 'uploaded').length;
const newSuccessCount = userScenario.filter(r => r.status === 'success').length;
const newSkippedCount = userScenario.filter(r => r.status === 'skipped').length;
const newErrorCount = userScenario.filter(r => r.status === 'error').length;
const newTotalSuccessful = newUploadedCount + newSuccessCount + newSkippedCount;
const newGrandTotal = newTotalSuccessful + newErrorCount;

console.log(`üì§ Neu hochgeladen: ${newUploadedCount}`);
console.log(`‚úÖ Bereits korrekt: ${newSuccessCount} (DIESER FEHLTE VORHER!)`);
console.log(`‚è≠Ô∏è  √úbersprungen: ${newSkippedCount}`);
console.log(`‚ùå Fehlerhaft: ${newErrorCount}`);
console.log(`üìä Erfolgreich gesamt: ${newTotalSuccessful}/${userScenario.length}`);
console.log(`üìä GESAMTSUMME: ${newGrandTotal}/${userScenario.length}`);
console.log("");

if (newGrandTotal === userScenario.length) {
    console.log("üéâ PROBLEM GEL√ñST: Alle Radikale sind jetzt korrekt gez√§hlt!");
    console.log("");

    // Generiere die neue Statusmeldung
    const details = [];
    if (newUploadedCount > 0) details.push(`${newUploadedCount} √ºbersetzt und hochgeladen`);
    if (newSuccessCount > 0) details.push(`${newSuccessCount} bereits korrekt`);
    if (newSkippedCount > 0) details.push(`${newSkippedCount} √ºbersprungen`);
    if (newErrorCount > 0) details.push(`${newErrorCount} fehlerhaft`);

    const statusMessage = `‚úÖ Verarbeitung abgeschlossen! ${newTotalSuccessful}/${userScenario.length} erfolgreich verarbeitet (${details.join(', ')}).`;

    console.log("üìù NEUE STATUSMELDUNG:");
    console.log(`   "${statusMessage}"`);

} else {
    console.log("‚ùå Immer noch ein Problem mit der Z√§hlung");
}

console.log("");

// === DETAIL-ANALYSE ===
console.log("üîç DETAIL-ANALYSE:");
console.log("-".repeat(30));

userScenario.forEach((radical, index) => {
    const wasCountedBefore = ['uploaded', 'skipped', 'error'].includes(radical.status);
    const isCountedNow = ['uploaded', 'success', 'skipped', 'error'].includes(radical.status);

    console.log(`${index + 1}. ${radical.meaning}: ${radical.status}`);
    console.log(`   Vorher gez√§hlt: ${wasCountedBefore ? '‚úÖ' : '‚ùå'}`);
    console.log(`   Jetzt gez√§hlt: ${isCountedNow ? '‚úÖ' : '‚ùå'}`);
    console.log(`   Message: ${radical.message}`);
    console.log("");
});

console.log("üí° ERKL√ÑRUNG:");
console.log("   - 'uploaded': Neue √úbersetzung wurde hochgeladen");
console.log("   - 'success': Smart-Merge erkannte, dass √úbersetzung bereits korrekt war");
console.log("   - 'skipped': DELETE-Modus fand keine Synonyme zum L√∂schen");
console.log("   - 'error': √úbersetzung oder Upload fehlgeschlagen");
console.log("");
console.log("   ALLE diese Status sollten als 'verarbeitet' gez√§hlt werden!");
